---
import 'the-new-css-reset';
import { Header } from '../components/Header';
import { Footer } from '../components/Footer';

interface Props {
  title: string;
  ogType: string;
}

const { title } = Astro.props;
const { ogType } = Astro.props;
---

<!doctype html>
<html lang="ja">
  <head>
    <meta name="generator" content={Astro.generator} />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Over The Coffee | {title}</title>
    <meta name="description" content="Over The Coffee Official Web Site" />
    <meta name="format-detection" content="telephone=no" />

    <!-- favicon/webclipicon -->
    <link rel="icon" href="/image/favicon.ico" />
    <link rel="icon" type="image/svg+xml" href="/image/favicon.svg" />
    <link rel="apple-touch-icon" href="/image/webclip.png" />

    <!-- ogp -->
    <meta property="og:site_name" content="Over The Coffee" />
    <meta property="og:url" content="https://overthecoffee.net/" />
    <meta property="og:type" content={ogType} />
    <meta property="og:title" content=`Over The Coffee | ${title}` />
    <meta
      property="og:description"
      content="Over The Coffee Official Web Site"
    />
    <meta property="og:image" content="/image/ogp.png" />
    <meta property="og:locale" content="ja_JP" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:description"
      content="Over The Coffee Official Web Site"
    />
    <meta name="twitter:image:src" content="/image/ogp.png" />

    <script>
      (function (d) {
        var config = {
            kitId: 'yln1vpp',
            scriptTimeout: 3000,
            async: true,
          },
          h = d.documentElement,
          t = setTimeout(function () {
            h.className =
              h.className.replace(/\bwf-loading\b/g, '') + ' wf-inactive';
          }, config.scriptTimeout),
          tk = d.createElement('script'),
          f = false,
          s = d.getElementsByTagName('script')[0],
          a;
        h.className += ' wf-loading';
        tk.src = 'https://use.typekit.net/' + config.kitId + '.js';
        tk.async = true;
        tk.onload = tk.onreadystatechange = function () {
          a = this.readyState;
          if (f || (a && a != 'complete' && a != 'loaded')) return;
          f = true;
          clearTimeout(t);
          try {
            Typekit.load(config);
          } catch (e) {}
        };
        s.parentNode.insertBefore(tk, s);
      })(document);
    </script>
  </head>
  <body>
    <div class="header">
      <Header />
    </div>
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style lang="scss">
  body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    font-family: fot-tsukubrdgothic-std, sans-serif;
    background-color: #fcfcfc;
  }

  main {
    flex-grow: 1;
    width: 100%;
    max-width: 1024px;
    margin: 0 auto;
    padding: 50px 16px 0;
    box-sizing: border-box;
  }

  .header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 100;
  }
</style>
